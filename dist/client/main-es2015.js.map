{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cat-ranking/cat-card/cat-card.component.ts","./src/app/cat-ranking/cat-card/cat-card.component.html","./src/app/cat-ranking/cat-ranking.component.ts","./src/app/cat-ranking/cat-ranking.component.html","./src/app/cat-ranking/prettiest-cat-card/prettiest-cat-card.component.ts","./src/app/cat-ranking/prettiest-cat-card/prettiest-cat-card.component.html","./src/app/cat-versus-cat/cat-versus-cat.component.ts","./src/app/cat-versus-cat/cat-versus-cat.component.html","./src/app/cat-versus-cat/side-cat/side-cat.component.ts","./src/app/cat-versus-cat/side-cat/side-cat.component.html","./src/app/cat.service.ts","./src/app/models/cat.model.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CatVersusCatComponent } from './cat-versus-cat/cat-versus-cat.component';\nimport { CatRankingComponent } from './cat-ranking/cat-ranking.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'versus', pathMatch: 'full' },\n  { path: 'versus', component: CatVersusCatComponent },\n  { path: 'ranking', component: CatRankingComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  public readonly TOP_BUTTON_CONFIGS = {\n    '/ranking' : {\n      label: 'Changer le classement !',\n      url: 'versus',\n    },\n    '/versus' : {\n      label: 'Voir le classement !',\n      url: 'ranking',\n    },\n  };\n\n  constructor(private readonly router: Router) {}\n\n  /**\n   * Get the top button config\n   * depends on current url\n   */\n  get topButtonConfig(): { label: string; url: string } {\n    const CURRENT_URL = this.router.url;\n    return this.TOP_BUTTON_CONFIGS[CURRENT_URL];\n  }\n\n  /**\n   * Navigate to the configured url\n   */\n  navigate(): void {\n    this.router.navigate([this.topButtonConfig.url]);\n  }\n}\n","<div class=\"navigate\" (click)=\"navigate()\"> {{ topButtonConfig?.label }} </div>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { CatRankingComponent } from './cat-ranking/cat-ranking.component';\nimport { CatVersusCatComponent } from './cat-versus-cat/cat-versus-cat.component';\nimport { CatService } from './cat.service';\nimport { SideCatComponent } from './cat-versus-cat/side-cat/side-cat.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PrettiestCatCardComponent } from './cat-ranking/prettiest-cat-card/prettiest-cat-card.component';\nimport { CatCardComponent } from './cat-ranking/cat-card/cat-card.component';\n\n@NgModule({\n  declarations: [AppComponent, CatVersusCatComponent, CatRankingComponent, SideCatComponent, PrettiestCatCardComponent, CatCardComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, AppRoutingModule],\n  providers: [CatService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Cat } from 'src/app/models/cat.model';\n\n@Component({\n  selector: 'app-cat-card',\n  templateUrl: './cat-card.component.html',\n  styleUrls: ['./cat-card.component.scss'],\n})\nexport class CatCardComponent implements OnInit {\n  @Input() ranking: number;\n  @Input() cat: Cat = new Cat();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Create the css property to display image from url\n   */\n  get backgroundStyle(): any {\n    return { 'background-image': 'url(' + this.cat.imgUrl + ')' };\n  }\n}\n","<div class=\"ranking\">\n    {{ ranking }}\n</div>\n<div class=\"img\" [ngStyle]=\"backgroundStyle\">\n\n</div>\n<div class=\"content\">\n    <div class=\"name\"> <label> Name: </label> {{ cat.name }} </div>\n    <div class=\"votes\"> <label> Vote count: </label> {{ cat.vote }} </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { CatService } from '../cat.service';\nimport { Cat } from '../models/cat.model';\n\n@Component({\n  selector: 'app-cat-ranking',\n  templateUrl: './cat-ranking.component.html',\n  styleUrls: ['./cat-ranking.component.scss'],\n})\nexport class CatRankingComponent implements OnInit {\n  public cats: Cat[] = [];\n  public prettiestCat: Cat = new Cat();\n\n  constructor(private readonly catService: CatService) {}\n\n  /**\n   * Call catService to get all cats sort by rank\n   * then split the first cat from it\n   */\n  ngOnInit(): void {\n    this.catService.getAllCats().subscribe((cats: Cat[]) => {\n      this.cats = cats;\n      this.prettiestCat = this.cats.shift();\n    });\n  }\n}\n","<app-prettiest-cat-card [cat]=\"prettiestCat\"></app-prettiest-cat-card>\n<app-cat-card *ngFor=\"let cat of cats; let index = index\" [cat]=\"cat\" [ranking]=\"index + 2\"></app-cat-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { Cat } from 'src/app/models/cat.model';\n\n@Component({\n  selector: 'app-prettiest-cat-card',\n  templateUrl: './prettiest-cat-card.component.html',\n  styleUrls: ['./prettiest-cat-card.component.scss'],\n})\nexport class PrettiestCatCardComponent implements OnInit {\n  @Input() cat: Cat = new Cat();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Create the css property to display image from url\n   */\n  get backgroundStyle(): any {\n    return { 'background-image': 'url(' + this.cat.imgUrl + ')' };\n  }\n}\n","<div class=\"ranking\"> 1 </div>\n<div class=\"img\" [ngStyle]=\"backgroundStyle\">\n\n</div>\n<div class=\"content\">\n    <div class=\"name\"> <label> Name: </label> {{ cat.name }} </div>\n    <div class=\"votes\"> <label> Vote count: </label> {{ cat.vote }} </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { CatService } from '../cat.service';\nimport { Cat } from '../models/cat.model';\n\n@Component({\n  selector: 'app-cat-versus-cat',\n  templateUrl: './cat-versus-cat.component.html',\n  styleUrls: ['./cat-versus-cat.component.scss'],\n})\nexport class CatVersusCatComponent implements OnInit {\n  public leftCat: Cat = new Cat();\n  public rightCat: Cat = new Cat();\n\n  constructor(private readonly catService: CatService) {}\n\n  /**\n   * Init both side cats\n   */\n  ngOnInit(): void {\n    this.setLeftCat();\n    this.setRightCat();\n  }\n\n  /**\n   * Set new cat for the left side\n   * If new cat is same as old cat retry\n   */\n  setLeftCat(): void {\n    this.catService.getRandomCat().subscribe((cat: Cat) => {\n      if (cat._id !== this.leftCat._id) {\n        this.leftCat = cat;\n      } else {\n        this.setLeftCat();\n      }\n    });\n  }\n\n  /**\n   * Set new cat for the right side\n   * If new cat is same as old cat retry\n   */\n  setRightCat(): void {\n    this.catService.getRandomCat().subscribe((cat: Cat) => {\n      if (cat && cat._id !== this.rightCat._id) {\n        this.rightCat = cat;\n      } else {\n        this.setRightCat();\n      }\n    });\n  }\n}\n","<app-side-cat (onVote)=\"setRightCat()\" [cat]=\"leftCat\"></app-side-cat>\n<div class=\"separator\"></div>\n<app-side-cat (onVote)=\"setLeftCat()\" [cat]=\"rightCat\"></app-side-cat>","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { CatService } from 'src/app/cat.service';\nimport { Cat } from 'src/app/models/cat.model';\n\n@Component({\n  selector: 'app-side-cat',\n  templateUrl: './side-cat.component.html',\n  styleUrls: ['./side-cat.component.scss'],\n})\nexport class SideCatComponent {\n  @Input() cat: Cat;\n  @Output() onVote: EventEmitter<void> = new EventEmitter();\n\n  constructor(private readonly catService: CatService) {}\n\n  /**\n   * Create the css property to display image from url\n   */\n  get backgroundStyle(): any {\n    return { 'background-image': 'url(' + this.cat.imgUrl + ')' };\n  }\n\n  /**\n   * On component click\n   * add a vote on current cat\n   * Send event to parent\n   */\n  @HostListener('click')\n  voteIt(): void {\n    this.catService.voteById(this.cat._id).subscribe((cat) => {\n      this.cat = cat;\n      this.onVote.emit();\n    });\n  }\n}\n","<h1> {{ cat.name }} </h1>\n<div [ngStyle]=\"backgroundStyle\"></div>","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cat } from './models/cat.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CatService {\n  private readonly API_URI = environment.apiUri + '/cats';\n\n  constructor(private readonly http: HttpClient) {}\n\n  /**\n   * get HTTP request on /api/cats/random\n   * Response is a random cat from the database\n   */\n  getRandomCat(): Observable<Cat> {\n    return this.http.get(this.API_URI + '/random');\n  }\n\n  /**\n   * put http request on /api/cats/vote/:id\n   * increment vote property of a cat\n   * @param id Id of the cat\n   * Response is the voted cat\n   */\n  voteById(id: string): Observable<Cat> {\n    return this.http.put(this.API_URI + '/vote/' + id, {});\n  }\n\n  /**\n   * get http request on /api/cats\n   * Response is all cats sort by vote\n   */\n  getAllCats(): Observable<Cat[]> {\n    return this.http.get<Cat[]>(this.API_URI);\n  }\n}\n","export class Cat {\n  _id ? = '';\n  name ? = '';\n  imgUrl ? = '';\n  vote ? = 0;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUri: 'http://' + window.location.hostname + ':8080/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}