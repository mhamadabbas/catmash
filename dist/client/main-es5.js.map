{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cat-ranking/cat-card/cat-card.component.ts","webpack:///src/app/cat-ranking/cat-card/cat-card.component.html","webpack:///src/app/cat-ranking/cat-ranking.component.ts","webpack:///src/app/cat-ranking/cat-ranking.component.html","webpack:///src/app/cat-ranking/prettiest-cat-card/prettiest-cat-card.component.ts","webpack:///src/app/cat-ranking/prettiest-cat-card/prettiest-cat-card.component.html","webpack:///src/app/cat-versus-cat/cat-versus-cat.component.ts","webpack:///src/app/cat-versus-cat/cat-versus-cat.component.html","webpack:///src/app/cat-versus-cat/side-cat/side-cat.component.ts","webpack:///src/app/cat-versus-cat/side-cat/side-cat.component.html","webpack:///src/app/cat.service.ts","webpack:///src/app/models/cat.model.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","router","TOP_BUTTON_CONFIGS","label","url","navigate","topButtonConfig","CURRENT_URL","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CatCardComponent","cat","imgUrl","CatRankingComponent","catService","cats","prettiestCat","getAllCats","subscribe","shift","PrettiestCatCardComponent","CatVersusCatComponent","leftCat","rightCat","setLeftCat","setRightCat","getRandomCat","_id","SideCatComponent","onVote","voteById","emit","CatService","http","API_URI","apiUri","get","put","providedIn","Cat","name","vote","environment","production","window","location","hostname","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CatVersusCatComponent } from './cat-versus-cat/cat-versus-cat.component';\nimport { CatRankingComponent } from './cat-ranking/cat-ranking.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'versus', pathMatch: 'full' },\n  { path: 'versus', component: CatVersusCatComponent },\n  { path: 'ranking', component: CatRankingComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  public readonly TOP_BUTTON_CONFIGS = {\n    '/ranking' : {\n      label: 'Changer le classement !',\n      url: 'versus',\n    },\n    '/versus' : {\n      label: 'Voir le classement !',\n      url: 'ranking',\n    },\n  };\n\n  constructor(private readonly router: Router) {}\n\n  /**\n   * Get the top button config\n   * depends on current url\n   */\n  get topButtonConfig(): { label: string; url: string } {\n    const CURRENT_URL = this.router.url;\n    return this.TOP_BUTTON_CONFIGS[CURRENT_URL];\n  }\n\n  /**\n   * Navigate to the configured url\n   */\n  navigate(): void {\n    this.router.navigate([this.topButtonConfig.url]);\n  }\n}\n","<div class=\"navigate\" (click)=\"navigate()\"> {{ topButtonConfig?.label }} </div>\n<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { CatRankingComponent } from './cat-ranking/cat-ranking.component';\nimport { CatVersusCatComponent } from './cat-versus-cat/cat-versus-cat.component';\nimport { CatService } from './cat.service';\nimport { SideCatComponent } from './cat-versus-cat/side-cat/side-cat.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PrettiestCatCardComponent } from './cat-ranking/prettiest-cat-card/prettiest-cat-card.component';\nimport { CatCardComponent } from './cat-ranking/cat-card/cat-card.component';\n\n@NgModule({\n  declarations: [AppComponent, CatVersusCatComponent, CatRankingComponent, SideCatComponent, PrettiestCatCardComponent, CatCardComponent],\n  imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, AppRoutingModule],\n  providers: [CatService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Cat } from 'src/app/models/cat.model';\n\n@Component({\n  selector: 'app-cat-card',\n  templateUrl: './cat-card.component.html',\n  styleUrls: ['./cat-card.component.scss'],\n})\nexport class CatCardComponent implements OnInit {\n  @Input() ranking: number;\n  @Input() cat: Cat = new Cat();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Create the css property to display image from url\n   */\n  get backgroundStyle(): any {\n    return { 'background-image': 'url(' + this.cat.imgUrl + ')' };\n  }\n}\n","<div class=\"ranking\">\n    {{ ranking }}\n</div>\n<div class=\"img\" [ngStyle]=\"backgroundStyle\">\n\n</div>\n<div class=\"content\">\n    <div class=\"name\"> <label> Name: </label> {{ cat.name }} </div>\n    <div class=\"votes\"> <label> Vote count: </label> {{ cat.vote }} </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { CatService } from '../cat.service';\nimport { Cat } from '../models/cat.model';\n\n@Component({\n  selector: 'app-cat-ranking',\n  templateUrl: './cat-ranking.component.html',\n  styleUrls: ['./cat-ranking.component.scss'],\n})\nexport class CatRankingComponent implements OnInit {\n  public cats: Cat[] = [];\n  public prettiestCat: Cat = new Cat();\n\n  constructor(private readonly catService: CatService) {}\n\n  /**\n   * Call catService to get all cats sort by rank\n   * then split the first cat from it\n   */\n  ngOnInit(): void {\n    this.catService.getAllCats().subscribe((cats: Cat[]) => {\n      this.cats = cats;\n      this.prettiestCat = this.cats.shift();\n    });\n  }\n}\n","<app-prettiest-cat-card [cat]=\"prettiestCat\"></app-prettiest-cat-card>\n<app-cat-card *ngFor=\"let cat of cats; let index = index\" [cat]=\"cat\" [ranking]=\"index + 2\"></app-cat-card>","import { Component, OnInit, Input } from '@angular/core';\nimport { Cat } from 'src/app/models/cat.model';\n\n@Component({\n  selector: 'app-prettiest-cat-card',\n  templateUrl: './prettiest-cat-card.component.html',\n  styleUrls: ['./prettiest-cat-card.component.scss'],\n})\nexport class PrettiestCatCardComponent implements OnInit {\n  @Input() cat: Cat = new Cat();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Create the css property to display image from url\n   */\n  get backgroundStyle(): any {\n    return { 'background-image': 'url(' + this.cat.imgUrl + ')' };\n  }\n}\n","<div class=\"ranking\"> 1 </div>\n<div class=\"img\" [ngStyle]=\"backgroundStyle\">\n\n</div>\n<div class=\"content\">\n    <div class=\"name\"> <label> Name: </label> {{ cat.name }} </div>\n    <div class=\"votes\"> <label> Vote count: </label> {{ cat.vote }} </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { CatService } from '../cat.service';\nimport { Cat } from '../models/cat.model';\n\n@Component({\n  selector: 'app-cat-versus-cat',\n  templateUrl: './cat-versus-cat.component.html',\n  styleUrls: ['./cat-versus-cat.component.scss'],\n})\nexport class CatVersusCatComponent implements OnInit {\n  public leftCat: Cat = new Cat();\n  public rightCat: Cat = new Cat();\n\n  constructor(private readonly catService: CatService) {}\n\n  /**\n   * Init both side cats\n   */\n  ngOnInit(): void {\n    this.setLeftCat();\n    this.setRightCat();\n  }\n\n  /**\n   * Set new cat for the left side\n   * If new cat is same as old cat retry\n   */\n  setLeftCat(): void {\n    this.catService.getRandomCat().subscribe((cat: Cat) => {\n      if (cat._id !== this.leftCat._id) {\n        this.leftCat = cat;\n      } else {\n        this.setLeftCat();\n      }\n    });\n  }\n\n  /**\n   * Set new cat for the right side\n   * If new cat is same as old cat retry\n   */\n  setRightCat(): void {\n    this.catService.getRandomCat().subscribe((cat: Cat) => {\n      if (cat && cat._id !== this.rightCat._id) {\n        this.rightCat = cat;\n      } else {\n        this.setRightCat();\n      }\n    });\n  }\n}\n","<app-side-cat (onVote)=\"setRightCat()\" [cat]=\"leftCat\"></app-side-cat>\n<div class=\"separator\"></div>\n<app-side-cat (onVote)=\"setLeftCat()\" [cat]=\"rightCat\"></app-side-cat>","import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { CatService } from 'src/app/cat.service';\nimport { Cat } from 'src/app/models/cat.model';\n\n@Component({\n  selector: 'app-side-cat',\n  templateUrl: './side-cat.component.html',\n  styleUrls: ['./side-cat.component.scss'],\n})\nexport class SideCatComponent {\n  @Input() cat: Cat;\n  @Output() onVote: EventEmitter<void> = new EventEmitter();\n\n  constructor(private readonly catService: CatService) {}\n\n  /**\n   * Create the css property to display image from url\n   */\n  get backgroundStyle(): any {\n    return { 'background-image': 'url(' + this.cat.imgUrl + ')' };\n  }\n\n  /**\n   * On component click\n   * add a vote on current cat\n   * Send event to parent\n   */\n  @HostListener('click')\n  voteIt(): void {\n    this.catService.voteById(this.cat._id).subscribe((cat) => {\n      this.cat = cat;\n      this.onVote.emit();\n    });\n  }\n}\n","<h1> {{ cat.name }} </h1>\n<div [ngStyle]=\"backgroundStyle\"></div>","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Cat } from './models/cat.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CatService {\n  private readonly API_URI = environment.apiUri + '/cats';\n\n  constructor(private readonly http: HttpClient) {}\n\n  /**\n   * get HTTP request on /api/cats/random\n   * Response is a random cat from the database\n   */\n  getRandomCat(): Observable<Cat> {\n    return this.http.get(this.API_URI + '/random');\n  }\n\n  /**\n   * put http request on /api/cats/vote/:id\n   * increment vote property of a cat\n   * @param id Id of the cat\n   * Response is the voted cat\n   */\n  voteById(id: string): Observable<Cat> {\n    return this.http.put(this.API_URI + '/vote/' + id, {});\n  }\n\n  /**\n   * get http request on /api/cats\n   * Response is all cats sort by vote\n   */\n  getAllCats(): Observable<Cat[]> {\n    return this.http.get<Cat[]>(this.API_URI);\n  }\n}\n","export class Cat {\n  _id ? = '';\n  name ? = '';\n  imgUrl ? = '';\n  vote ? = 0;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUri: 'http://' + window.location.hostname + ':80/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}